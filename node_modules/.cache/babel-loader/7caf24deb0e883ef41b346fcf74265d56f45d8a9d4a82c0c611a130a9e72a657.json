{"ast":null,"code":"var _jsxFileName = \"/Users/hello/Desktop/event-app (2)/src/components/InfiniteLoader/InfiniteLoader.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo } from \"react\";\nimport { useFetchEvents } from \"../../hooks/useFetchEvents\";\nimport EventGrid from \"../EventGrid/EventGrid\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InfiniteLoader = () => {\n  _s();\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetching,\n    isFetchingNextPage\n  } = useFetchEvents();\n  const [search, setSearch] = useState(\"\");\n  const debouncedSearch = useDebounce(search, 300);\n  const allEvents = useMemo(() => {\n    var _data$pages$flatMap;\n    return (_data$pages$flatMap = data === null || data === void 0 ? void 0 : data.pages.flatMap(evList => evList)) !== null && _data$pages$flatMap !== void 0 ? _data$pages$flatMap : [];\n  }, [data]);\n  const filtered = useMemo(() => {\n    if (!debouncedSearch) return allEvents;\n    const term = debouncedSearch.toLowerCase();\n    return allEvents.filter(ev => ev.name.toLowerCase().includes(term) || ev.content.some(item => item.value.toLowerCase().includes(term)));\n  }, [allEvents, debouncedSearch]);\n  const sentinelRef = useRef(null);\n  useEffect(() => {\n    if (!sentinelRef.current || !hasNextPage) return;\n    const obs = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) fetchNextPage();\n    });\n    obs.observe(sentinelRef.current);\n    return () => obs.disconnect();\n  }, [fetchNextPage, hasNextPage]);\n  console.log(\"filtered\", filtered);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      value: search,\n      onChange: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventGrid, {\n      events: filtered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: sentinelRef,\n      className: \"h-8\",\n      children: isFetchingNextPage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"Loading more\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isFetching && !isFetchingNextPage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Refreshing\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(InfiniteLoader, \"KAQh74ssOXqeuVulrP7oqPXYvRg=\", false, function () {\n  return [useFetchEvents, useDebounce];\n});\n_c = InfiniteLoader;\nexport default InfiniteLoader;\nvar _c;\n$RefreshReg$(_c, \"InfiniteLoader\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","useFetchEvents","EventGrid","SearchBar","useDebounce","jsxDEV","_jsxDEV","Fragment","_Fragment","InfiniteLoader","_s","data","fetchNextPage","hasNextPage","isFetching","isFetchingNextPage","search","setSearch","debouncedSearch","allEvents","_data$pages$flatMap","pages","flatMap","evList","filtered","term","toLowerCase","filter","ev","name","includes","content","some","item","value","sentinelRef","current","obs","IntersectionObserver","entries","isIntersecting","observe","disconnect","console","log","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","events","ref","className","_c","$RefreshReg$"],"sources":["/Users/hello/Desktop/event-app (2)/src/components/InfiniteLoader/InfiniteLoader.tsx"],"sourcesContent":["import React, {\n  useRef,\n  useEffect,\n  useState,\n  useMemo,\n  useCallback,\n} from \"react\";\nimport { useFetchEvents } from \"../../hooks/useFetchEvents\";\nimport EventGrid from \"../EventGrid/EventGrid\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\n\nconst InfiniteLoader: React.FC = () => {\n  const { data, fetchNextPage, hasNextPage, isFetching, isFetchingNextPage } =\n    useFetchEvents();\n  const [search, setSearch] = useState(\"\");\n  const debouncedSearch = useDebounce(search, 300);\n\n  const allEvents = useMemo(\n    () => data?.pages.flatMap((evList) => evList) ?? [],\n    [data]\n  );\n\n  const filtered = useMemo(() => {\n    if (!debouncedSearch) return allEvents;\n    const term = debouncedSearch.toLowerCase();\n    return allEvents.filter(\n      (ev) =>\n        ev.name.toLowerCase().includes(term) ||\n        ev.content.some((item) => item.value.toLowerCase().includes(term))\n    );\n  }, [allEvents, debouncedSearch]);\n\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (!sentinelRef.current || !hasNextPage) return;\n    const obs = new IntersectionObserver((entries) => {\n      if (entries[0].isIntersecting) fetchNextPage();\n    });\n    obs.observe(sentinelRef.current);\n    return () => obs.disconnect();\n  }, [fetchNextPage, hasNextPage]);\n\n  console.log(\"filtered\", filtered);\n\n  return (\n    <>\n      <SearchBar value={search} onChange={setSearch} />\n      <EventGrid events={filtered} />\n      <div ref={sentinelRef} className=\"h-8\">\n        {isFetchingNextPage && <p className=\"text-center\">Loading more…</p>}\n      </div>\n      {isFetching && !isFetchingNextPage && (\n        <p className=\"text-center\">Refreshing…</p>\n      )}\n    </>\n  );\n};\n\nexport default InfiniteLoader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IACVC,MAAM,EACNC,SAAS,EACTC,QAAQ,EACRC,OAAO,QAEF,OAAO;AACd,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC,IAAI;IAAEC,aAAa;IAAEC,WAAW;IAAEC,UAAU;IAAEC;EAAmB,CAAC,GACxEd,cAAc,CAAC,CAAC;EAClB,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMmB,eAAe,GAAGd,WAAW,CAACY,MAAM,EAAE,GAAG,CAAC;EAEhD,MAAMG,SAAS,GAAGnB,OAAO,CACvB;IAAA,IAAAoB,mBAAA;IAAA,QAAAA,mBAAA,GAAMT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,KAAK,CAACC,OAAO,CAAEC,MAAM,IAAKA,MAAM,CAAC,cAAAH,mBAAA,cAAAA,mBAAA,GAAI,EAAE;EAAA,GACnD,CAACT,IAAI,CACP,CAAC;EAED,MAAMa,QAAQ,GAAGxB,OAAO,CAAC,MAAM;IAC7B,IAAI,CAACkB,eAAe,EAAE,OAAOC,SAAS;IACtC,MAAMM,IAAI,GAAGP,eAAe,CAACQ,WAAW,CAAC,CAAC;IAC1C,OAAOP,SAAS,CAACQ,MAAM,CACpBC,EAAE,IACDA,EAAE,CAACC,IAAI,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,IAAI,CAAC,IACpCG,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,KAAK,CAACR,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,IAAI,CAAC,CACrE,CAAC;EACH,CAAC,EAAE,CAACN,SAAS,EAAED,eAAe,CAAC,CAAC;EAEhC,MAAMiB,WAAW,GAAGtC,MAAM,CAAiB,IAAI,CAAC;EAChDC,SAAS,CAAC,MAAM;IACd,IAAI,CAACqC,WAAW,CAACC,OAAO,IAAI,CAACvB,WAAW,EAAE;IAC1C,MAAMwB,GAAG,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MAChD,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,EAAE5B,aAAa,CAAC,CAAC;IAChD,CAAC,CAAC;IACFyB,GAAG,CAACI,OAAO,CAACN,WAAW,CAACC,OAAO,CAAC;IAChC,OAAO,MAAMC,GAAG,CAACK,UAAU,CAAC,CAAC;EAC/B,CAAC,EAAE,CAAC9B,aAAa,EAAEC,WAAW,CAAC,CAAC;EAEhC8B,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEpB,QAAQ,CAAC;EAEjC,oBACElB,OAAA,CAAAE,SAAA;IAAAqC,QAAA,gBACEvC,OAAA,CAACH,SAAS;MAAC+B,KAAK,EAAElB,MAAO;MAAC8B,QAAQ,EAAE7B;IAAU;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD5C,OAAA,CAACJ,SAAS;MAACiD,MAAM,EAAE3B;IAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/B5C,OAAA;MAAK8C,GAAG,EAAEjB,WAAY;MAACkB,SAAS,EAAC,KAAK;MAAAR,QAAA,EACnC9B,kBAAkB,iBAAIT,OAAA;QAAG+C,SAAS,EAAC,aAAa;QAAAR,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,EACLpC,UAAU,IAAI,CAACC,kBAAkB,iBAChCT,OAAA;MAAG+C,SAAS,EAAC,aAAa;MAAAR,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1C;EAAA,eACD,CAAC;AAEP,CAAC;AAACxC,EAAA,CA7CID,cAAwB;EAAA,QAE1BR,cAAc,EAEQG,WAAW;AAAA;AAAAkD,EAAA,GAJ/B7C,cAAwB;AA+C9B,eAAeA,cAAc;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
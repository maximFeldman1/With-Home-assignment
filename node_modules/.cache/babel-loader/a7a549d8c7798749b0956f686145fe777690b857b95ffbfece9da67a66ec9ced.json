{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport { fetchEvents } from '../api/events';\nexport const useFetchEvents = () => {\n  _s();\n  return useInfiniteQuery(['events'], ({\n    pageParam = 1\n  }) => fetchEvents(pageParam), {\n    getNextPageParam: (lastPage, pages) => pages.length < 20 ? pages.length + 1 : undefined,\n    staleTime: 1000 * 60 * 5,\n    cacheTime: 1000 * 60 * 30\n  });\n};\n_s(useFetchEvents, \"xMCOiuh9cV5e8gBi6hogZoGnISk=\", false, function () {\n  return [useInfiniteQuery];\n});","map":{"version":3,"names":["useInfiniteQuery","fetchEvents","useFetchEvents","_s","pageParam","getNextPageParam","lastPage","pages","length","undefined","staleTime","cacheTime"],"sources":["/Users/hello/Desktop/With-Home assignment/src/hooks/useFetchEvents.ts"],"sourcesContent":["import { useInfiniteQuery } from '@tanstack/react-query';\nimport { fetchEvents } from '../api/events';\nimport { Event } from '../types/event';\n\nexport const useFetchEvents = () =>\n  useInfiniteQuery<Event[], Error>(\n    ['events'],\n    ({ pageParam = 1 }) => fetchEvents(pageParam),\n    {\n      getNextPageParam: (lastPage, pages) =>\n        pages.length < 20 ? pages.length + 1 : undefined,\n      staleTime: 1000 * 60 * 5,\n      cacheTime: 1000 * 60 * 30,\n    }\n  );\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,WAAW,QAAQ,eAAe;AAG3C,OAAO,MAAMC,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAC5BH,gBAAgB,CACd,CAAC,QAAQ,CAAC,EACV,CAAC;IAAEI,SAAS,GAAG;EAAE,CAAC,KAAKH,WAAW,CAACG,SAAS,CAAC,EAC7C;IACEC,gBAAgB,EAAEA,CAACC,QAAQ,EAAEC,KAAK,KAChCA,KAAK,CAACC,MAAM,GAAG,EAAE,GAAGD,KAAK,CAACC,MAAM,GAAG,CAAC,GAAGC,SAAS;IAClDC,SAAS,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC;IACxBC,SAAS,EAAE,IAAI,GAAG,EAAE,GAAG;EACzB,CACF,CAAC;AAAA;AAACR,EAAA,CAVSD,cAAc;EAAA,QACzBF,gBAAgB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}